openapi: 3.0.3
info:
  title: Library API
  version: v1
  description: API for managing a library system

servers:
  - url: http://localhost:3000/api/v1

paths:
  /tokens:
    post:
      summary: Create access token
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                api_key:
                  type: string
              required:
                - api_key
      responses:
        '201':
          description: Token created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Token'
        '401':
          $ref: '#/components/responses/UnprocessableEntity'

  /tokens/refresh:
    post:
      summary: Refresh access token
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                refresh_token:
                  type: string
              required:
                - refresh_token
      responses:
        '201':
          description: Token refreshed successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RefreshToken'
        '401':
          $ref: '#/components/responses/UnprocessableEntity'

  /books:
    get:
      summary: List all books
      tags:
        - Books
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  books:
                    type: array
                    items:
                      $ref: '#/components/schemas/Book'
                  meta:
                    $ref: '#/components/schemas/PaginationMeta'
        '401':
          $ref: '#/components/responses/Unauthorized'
    post:
      summary: Create a new book
      tags:
        - Books
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BookInput'
      responses:
        '201':
          description: Book created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Book'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'

  /users:
    post:
      summary: Create a new borrower
      tags:
        - Users
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserInput'
      responses:
        '201':
          description: User created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'

  /borrowed_books:
    post:
      summary: Borrow a book
      tags:
        - Books
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                book_id:
                  type: integer
              required:
                - email
                - book_id
      responses:
        '201':
          description: Book borrowed successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BorrowedBook'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'

  /returned_books:
    post:
      summary: Return a book
      tags:
        - Books
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                book_id:
                  type: integer
              required:
                - email
                - book_id
      responses:
        '200':
          description: Book returned successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReturnedBook'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    Token:
      type: object
      properties:
        access_token:
          type: string
        refresh_token:
          type: string
        expires_in:
          type: integer
        refresh_expires_in:
          type: integer
      required:
        - access_token
        - refresh_token
        - expires_in
        - refresh_expires_in

    RefreshToken:
      type: object
      properties:
        access_token:
          type: string
      required:
        - access_token

    Book:
      type: object
      properties:
        id:
          type: integer
        isbn:
          type: string
        title:
          type: string
        author:
          type: string
      required:
        - id
        - isbn
        - title
        - author

    BookInput:
      type: object
      properties:
        isbn:
          type: string
        title:
          type: string
        author:
          type: string
      required:
        - isbn
        - title
        - author

    User:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        email:
          type: string
      required:
        - id
        - name
        - email

    UserInput:
      type: object
      properties:
        name:
          type: string
        email:
          type: string
      required:
        - name
        - email

    BorrowedBook:
      type: object
      properties:
        id:
          type: integer
        isbn:
          type: string
        title:
          type: string
        author:
          type: string
        status:
          type: string
        borrowed_at:
          type: string
          format: date-time
      required:
        - id
        - isbn
        - title
        - author
        - status
        - borrowed_at

    ReturnedBook:
      type: object
      properties:
        id:
          type: integer
        isbn:
          type: string
        title:
          type: string
        author:
          type: string
        status:
          type: string
        returned_at:
          type: string
          format: date-time
      required:
        - id
        - isbn
        - title
        - author
        - status
        - returned_at    

    PaginationMeta:
      type: object
      properties:
        current_page:
          type: integer
        total_pages:
          type: integer
        total_count:
          type: integer
      required:
        - current_page
        - total_pages
        - total_count

  responses:
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            type: object
            properties:
              error_message:
                type: string
              error_type:
                type: string
            required:
              - error_message
              - error_type

    UnprocessableEntity:
      description: Unprocessable Entity
      content:
        application/json:
          schema:
            type: object
            properties:
              error_message:
                type: string
              error_type:
                type: string
            required:
              - error_message
              - error_type
